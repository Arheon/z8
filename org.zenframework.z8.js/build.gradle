buildscript {
	dependencies {
		classpath 'com.eriwen:gradle-css-plugin:2.14.0'
		classpath 'com.eriwen:gradle-js-plugin:2.14.1'
	}
}

apply plugin: 'base'
apply plugin: 'js'
apply plugin: 'css'

configurations {
	webzip
}

combineCss {
	source = file("$projectDir/src/css/css.buildorder").readLines().collect { "$projectDir/src/css/$it" }
	dest = file("${buildDir}/web/debug/css/revolt.css")
}

minifyCss {
	source = combineCss
	dest = "${buildDir}/web/css/revolt.css"
}

task combineFontsCss(type: com.eriwen.gradle.css.tasks.CombineCssTask) {
	source = file("$projectDir/src/css/fonts.buildorder").readLines().collect { "$projectDir/src/css/$it" }
	dest = file("${buildDir}/web/debug/css/fonts.css")
}

task minifyFontsCss(type: com.eriwen.gradle.css.tasks.MinifyCssTask) {
	source = combineFontsCss
	dest = "${buildDir}/web/css/fonts.css"
}

combineJs {
	source = file("$projectDir/src/js/js.buildorder").readLines().collect { "$projectDir/src/js/$it" }
	dest = file("${buildDir}/web/debug/revolt.js")
}

minifyJs {
	source = combineJs
	dest = file("${buildDir}/web/revolt.js")
}

task combineUtilJs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
	source = file("$projectDir/src/js/util.buildorder").readLines().collect { "$projectDir/src/js/$it" }
	dest = file("${buildDir}/web/debug/revolt.utils.js")
}

task minifyUtilJs(type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
	source = combineUtilJs
	dest = file("${buildDir}/web/revolt.utils.js")
}

task assembleWebzip(type: Zip, group: 'web', dependsOn: [minifyCss, minifyFontsCss, minifyJs, minifyUtilJs]) {
	archiveName "${project.name}.zip"
	destinationDir file("$buildDir/libs/")
	from("${buildDir}/web") {
		includeEmptyDirs = false
	}
	description "Assemble archive $archiveName into ${relativePath(destinationDir)}"
}

assemble.dependsOn assembleWebzip

artifacts {
	webzip assembleWebzip
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact source: assembleWebzip, extension: 'zip', classifier: 'web'
		}
	}
}
